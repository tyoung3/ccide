// t2.cs.ccide:  Hello World in C Sharp with decision table
class Hello {
//CCIDE_INLINE_CODE:
/*GENERATED_CODE: */
#ifndef __CCIDE_INLINE_C
#define __CCIDE_INLINE_C

/*ccide-0.7.0-0
ccide is Copyright (C) 2002-2004,2010,2012;  Thomas W. Young, e-mail:  ccide@twyoung.com 
The code generated by ccide is covered by the same license as the source  
code(decision table) from which it is derived. If you created the source,  
you are free to do anything you like with the generated code, 
including incorporating it into or linking it with proprietary software.  
*/ 
static int ccide_group=1; 
#ifndef UINT_MAX 
#include "limits.h" 
#endif /* End if not defined UINT_MAX */ 
 
		/* Return rule number */ 
static int CCIDEFindRule(
	int nbrrules,  unsigned long ccide_table, unsigned long yes[], unsigned long no[]){ 
        int r=0; 
        unsigned long nstate; 
 
        nstate = UINT_MAX ^ ccide_table; 
 
        while ( 
		( (yes[r] & nstate) || (no[r]  & ccide_table) ) 
		 && ( ++r < nbrrules )  
	) {}; 
 
        return r; 
} 
 
static int CCIDEFindRuleYes(             /* Return rule number */
	int nbrrules, unsigned long ccide_table, unsigned long yes[]) 
{ 
        int r=0; 
        unsigned long nstate;
 
        nstate = UINT_MAX ^ ccide_table; 
        while ( (yes[r] & nstate) && ( ++r < nbrrules ) ) {}; 
        return r; 
} 
#endif /* End ifndef  __CCIDE_INLINE_C  */
/*END_GENERATED_CODE: */
   
   static void Main() {
	int ccide_group=1,state=4;

        //DECISION_TABLE:					 
        //   1  2  3 |NEWGROUP		
        //  ______|________					 
        //   X  -  - | System.Console.WriteLine("1.");		 
        //   -  X  - | System.Console.WriteLine("2.Hello");	 
        //   -  -  X | System.Console.WriteLine("3.World");	 
        //   2  3  4 |NEWGROUP		
        //END_TABLE:						 
        //GENERATED_CODE: FOR TABLE_1.
        //	3 Rules, 3 conditions, and 7 actions.
         { CCIDE_TABLE_1: switch(ccide_group ) {	
        	case 3:		//  Rule  3  
        	    System.Console.WriteLine("3.World");
        	    ccide_group = 4;
        	    goto CCIDE_TABLE_1;
        	case 2:		//  Rule  2  
        	    System.Console.WriteLine("2.Hello");
        	    ccide_group = 3;
        	    goto CCIDE_TABLE_1;
        	case 1:		//  Rule  1  
        	    System.Console.WriteLine("1.");
        	    ccide_group = 2;
        	    goto CCIDE_TABLE_1;
         	        } // End Switch 
        }
        //END_GENERATED_CODE: FOR TABLE_1, by ccide-0.7.0-0  

        //DECISION_TABLE:					 
        //   Y  N  Y | state==4 					 
        //   1  5  6 |NEWGROUP		
        //  ______|________					 
        //   X  -  - | System.Console.WriteLine("4.");		 
        //   -  X  - | System.Console.WriteLine("5.Goodbye");	 
        //   -  -  X | System.Console.WriteLine("6.World");	 
        //   5  4  - | state=$$;					 
        //   5  6  7 |NEWGROUP		
        //END_TABLE:						 
        //GENERATED_CODE: FOR TABLE_2.
        //	3 Rules, 4 conditions, and 9 actions.
        //	Table 2 rule order = 1 2 3 
         {	unsigned long CCIDE_table2_yes[3]={   3UL,   4UL,   9UL};
        	unsigned long CCIDE_table2_no[3]= {   0UL,   1UL,   0UL};
        	ccide_group=1;

        CCIDE_TABLE_2:
        	switch(CCIDEFindRule(3,
        		  (state==4)
        		| (ccide_group == 1)<<1
        		| (ccide_group == 5)<<2
        		| (ccide_group == 6)<<3
        		  ,CCIDE_table2_yes, CCIDE_table2_no)) {
        	case  2:	//	Rule  3 
        	    System.Console.WriteLine("6.World");
        	    ccide_group = 7;
        	    goto CCIDE_TABLE_2;
        	case  1:	//	Rule  2 
        	    System.Console.WriteLine("5.Goodbye");
        	    state=4;
        	    ccide_group = 6;
        	    goto CCIDE_TABLE_2;
        	case  0:	//	Rule  1 
        	    System.Console.WriteLine("4.");
        	    state=5;
        	    ccide_group = 5;
        	    goto CCIDE_TABLE_2;
        	} // End Switch
        }
        //END_GENERATED_CODE: FOR TABLE_2, by ccide-0.7.0-0  
	
	if(ccide_group == 7) System.Console.WriteLine("Success!\n");
	else System.Console.WriteLine("Failed.\n");
 
    }  // End of Main

}  // End of Hello

