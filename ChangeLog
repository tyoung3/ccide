2012-08-23 
	0.6.5-1
		.  Removed compile/execute steps from tests, as no longer necessary.
		.  Added fr translation to tests.
		.  ccide man page copyright changed from GPL to GNU Free Documentation License.
		.  Fixed failure to detect duplicate condition stubs.
		,  Changed 'Usage' function to display environment variables, exit conditions, and bug reporting.
		.  Fixed ccide script to call ccidew and exit 0, instead of exit 1 on --help option.
		.  Fixed check.sh[.in] to verify generation and execution separately.
		.  Added 'help', 'errors', and 'undo' to tests, increasing coverage.
		.  Fixed condition stub NEWGROUP for -L BASH. 
		.  Fixed stray right parenthesis in generated bash programs.
		.  Added -g(--gotoless) option for languages, like JavaScript, wo/GOTO statement.
		   Action stub NEWGROUP not implememented for GOTOless languages.
		.  Added Vietamese, vi.po, file.
		.  Added Russian,   ru.po, file.
		.  Added German,    de.po, file.

2012-08-14
	0.6.4-1
		.  Fixed bug in rule sequencing.
			. Updated tests accordingly.
		.  -p prefix option fixes
		.  Bash script generation fixes.
		.  Set -DNDEBUG in Makefile to disable assert function in production.
		.  Added uk hr & fr .../*.po files from The Translation Project

2012-08-09  
	0.6.3-1
		.  Internationalization framework.
			. Markup strings w/_(STRING).
		.  Mingw install: 'make DESTDIR=/mingw install'
		.  gettextize -- Automake changes for gettext NLS translation.
		.  Fix C++ invocation so that ccide -L C++ < SOURCE.c.d does not cause error message.
		.  Changed configure to not delete the ccide man page from the build.
		.  Issued Press Release: https://github.com/tyoung3/ccide/wiki/Press-Release 
		.  Autogen.sh invokes autoreconf but not configure.  Configure must be run separately.

2012-08-04
	0.6.2-9
		Add bitcount function for environments missing the GCC builtin.

2012-08-04
	0.6.2-8
		Improved generated code for the special case of just one condition.
		Fixed 'make distcheck'

2012-07-26
	0.6.2-7
		Improved rule search order. 
		Eliminated qsort ambiguity for equal conditions.
		Show rule search order in output commentary.
		Fixed a bug possibly dropping a rule in error when more than 32 actions in the table.
		Increase maximum number of actions to 2048. 
		Updated man page.

2012-07-26
	0.6.2-6
		Fixed bug causing change to condition stub. (<= was being changed to !=).
		Fixed ccide script search for m4 files.  CCIDE_M4DIR overrides this search. 
		Changed default columnsize from 2 to 3.
		Fixed overlap and conflict error messages to show correct rule numbers.
		Fixed messages when dropping rules to show correct rule number.
		Avoid verifying dropped rules causing spurious error messages.
		Drop null rules; i.e. rules with no actions.
		Fixed missing table label when generating a single rule [ if(cond) ...]. 
		Removed unneeded braces,{}, surrounding actions when generating
		a single rule.

2012-07-17
	0.6.2-4
		Portability fixes
		Changed 'build' script name to 'autogen.sh'.
		Using -Werror compiler option.
		Renamed huge test files to be huge1 test files.
		Created new test program,if2rpn, an infix to RPN converter using
		    state machine logic embedded in decision tables.
		Moved some ccidew logic into decision tables.
		Changed ccide build to use ccidemain.c.d and 
		ccideparse.y.d files as source for ccidemain.c 
		and ccideparse.y files.

2012-07-11
	0.6.1-1 Remove  ./tests/ and ./scripts/ from RPM distribution.
		Fixed JAVA and BASH decision table expansion.
		Fixed m4 comments in ccideparse.y and ccidemain.c
		Fixed spurious, initial blank line in BASH output.

2012-07-09
	0.6.0-2	Added environment variable, CCIDE_M4LIB to ccide script.
		Added tryit.cpp to test suite.
		Ccide searches multiple places for its .M4 files.
			Updated ccide man page.
		Reorganized directories
		 	eliminated examples/ and tests/ccide.test
			move test cases to tests/
			Makefile in tests/
			added tryit.cpp case to tests/
			move ccide options and run options to tests/*.opt files 
		 Fixed 'make check' problems. Uses CCIDE_M4LIB

2012-07-03
	0.5.0-8	 Added threeway.d to examples/.
		 Changed lexer msg from ...State=n... to ...Start State=n...
	
2012-07-02
	0.5.0-7  Updated Cygwin files
		 Remove strndup comment for 'autoscan'
		
2012-07-02
	0.5.0-6  Replaced strndup function with malloc..., memcpy for Mingw Compatibility

2012-06-29
	0.5.0-5  Moved to GitHub/ccide. Ccidew should work the same as 0.4.0-1
		 Updated README
		 Fixed automake files
		 Created new TODO file
		 Included ccide-CS.m4 in RPM BUILD
		 Fixed link to tarball for RPM build.
		 Replaced dejagnu check with tests/check.sh script.
		 Upgraded to GPL-v3. 
		 Updated copyright notices.

2010-10-08
	0.4.0-1  Updated the man page. 
		 Fixed Java support with changes to ccidew and ccide-JAVA.m4

2010-07-13
	0.3.0-1  Added CH(interpreted C) support. Ex. ( ccide -L ch < elev.chd > elev.c; ch elev.c )
		 Changed wrapper script, 'ccide', to show supported languages when -L ? is specified.
		 Changed ccide to show ccide help instead of ccidew help when --help is specified.
		 Changed ccidew help to show 'ccidew' instead of 'ccide'.

2010-05-11
	0.2.3-2  Added euphoria support. Ex. ccide -L ex < ex2.exd > ex2.ex 

2010-04-11 
	0.2.2.1  Fixed incorrect error message when condition stub contains '!=' (not equal).
		 Make inline findrule functions and the ccide group variable static. 

2010-03-27 0.2.1.1
	* Added C# support.  Ex. ccide -L cs < ex1.csd > ex1.cs

2004-10-22
	* Fixed errors in generating skeleton code.

2004-09-29
	* Added JAVA support.
	* Set maximum command line argument size to 40 characters.
	* Enhanced security in ccidemain.c code.

2004-09-20
	* Numerous fixes to BASH script generation. 
	* Added CC comment recognition:  if //DECISION_TABLE: is encountered
	  in a C program, use "//" for generated comments instead of
	  /* .... */.     
	* Fixed standard C comment recognition and generation. 
	* Added environment variable, CCIDEW, to ccide script, to
	  facillitate testing.  If CCIDEW is empty, the ccide script will
	  attempt to find the ccidew program and set the CCIDEW variable 
	  equal to its location; otherwise, the script will attempt to use
	  the program at the CCIDEW location.
	* Changed C program output from C++ style comments(//) to C style
	  comments(/*...*/) to enhance portability.
	* Added logic to suppress unnecessary condition evaluation (e.g.
	  if there are only "Don't Care"  entries in the condition statement).
	* Added -p PREFIX option to substitute PREFIX for CCIDE in generated code.
	* Added NEWGROUP in condition stub to replace ccide_group == $$.
	* Eliminated unused case labels to reduce compiler warnings.
	* Made some security enhancements. 
	* Replaced the typedef, CCIDE-BIT, with unsigned long.
	* Added new target (make flaws) to Makefile for systems with flawfinder
	  installed. 

2004-09-11
	* Made 'ccide' a wrapper script for 'ccidew', the decision table
	  code generator. 

2004-09-06
	* Allowed for multiple $$ substitutions in one action or condition stub.
	* Implemented -m4 option and m4 macros to create language independent
	  output and conversion to C, C++, or BASH.

2004-08-28
	* Added optional size parameter to the -s(skeleton) option, for
	  generating skeleton programs of a specified size.
	* Increased the maximum number of actions from 32 to 1024.
	* Increased the maximum number of rules from 32 to 256.
	* Added optimization such that fewer actions are generated when
	  trailing actions are equal for non-adjacent rules.
	* Added [-c COLWIDTH] option to specify the number of characters
	  in each action or condition entry.
	* Increased the maximum size of an integer entry from 99
	  to 99999.
	* Added [-L LANG] option.  LANG = C|CC|BASH.  LANG defaults to C. 
	
2004-08-26 
	*ccideparse.y: Added [-a] option to allow duplicate actions. 
	*ccidemain.c: Changed to generate conditional code for
	              the single rule special case.     
	*ccidemain.c: Changed design assumption such that ccide assumes
		      that actions always involve side effects and that
		      conditions never involve side effects.  Later,
		      a '[CONDITIONS WITH] SIDE EFFECTS' option
		      will be available in the '//DECISION_TABLE:' statement.
		      This change does not require changes to existing
	              programs. 

2004-08-24 Tom Young <ccide@twyoung.com>
	*ccidemain.c: Replaced strdup with Strdup and added 
		      memory checking error message.
		      Reduced the number of global variables.
	*ccideinline.c: Added code to make skeleton program complile 
			cleanly.

2004-08-21 Tom Young <ccide@twyoung.com>
	* Changed test file comments from .d to .in.

2004-08-20 Tom Young <ccide@twyoung.com>
	*ccidemain.c: Fixed qsort invocation and seq functions. 
		      Added dummy guard int to CCIDEABLE struct for Solaris 9.
	*ccidemain.h: Added DISPLAY macro to print a string if yydebug set.
	*ccideparse.y: Eliminated some warning messages.
	*configure.in: Began to synchronize versions to CVS.  0.0.7 = 
		       CVS 7.0. 

2004-08-19 Tom Young <ccide@twyoung.com>
	*ccidelex.l:  Replace '//ACTIONS:' statement with the more 
	              readable '//_______'... statement.  
			
2004-08-18 Tom Young <ccide@twyoung.com>
	*ccideparse.y: Replaced option checking logic with a decision table.
	               Moved Usage and copyright functions to ccideinline.c.
	*ccidemain.c:  Added [-l] local time option for timestamps.
	*ccidemain.c:  Added code to check for a lonely '=' in a 
	               condition expression (a common C error).  Also
		       added -e option to bypass this check. 
	*ccidemain.h:  In ERROR3 function, added 'RC=1' so ccide return
	               code is 1 if any ERROR3 occurs.

2004-08-17 Tom Young <ccide@twyoung.com>
	* New 'State Machine' functionality
	  In the special case where a single condition row containing
	  integers is specified and the condition stub is in the form of:

        	... | EXPRESSION == $$

	  ccide will generate 'state machine' code, replacing the
	  CcideFindRule.. function with a switch(EXPRESSION) statement, and 
	  using the row integers in a case statement.

	* Updated copyright messages.
	* Added [-s] option to produce a skeleton(example) program.
	* Added [-u](undo) option to strip out generated code without
	  generating new code. 
	* Added [-b] option to bypass timestamping output.

2004-08-16 Tom Young <ccide@twyoung.com>
	* ccideparse.l: Changed yywrap to be a static function.
	* ccidemain.c:  Added commentary.  Bypassed unused code. 

2004-08-15 Tom Young <ccide@twyoung.com>
	* Fixed problems with 32 conditions. 
	* Changed 'make check' to compile and run
	  all test cases.
	* Updated test case appropriately.
	* ccidemain.h: CCIDE_NCOND restored to 32.
	* cciderunx.c: INT-MAX replaced with UINT-MAX.

2004-08-13 Tom Young <twysf@twyoung.com>
	* ccidemain.h: CCIDE_NCOND reduced from 32 to 31.  
	* ccideparse.l:  Decision table statements can now be preceded
		by whitespace.

2004-08-10 Tom Young <twysf@twyoung.com>
	* change to 0.0.4
	* Makefile.am: made 'html:' target depend on ChangeLog 

2004-08-09 Tom Young <twysf@twyoung.com>
	* configure.in, ccide.spec:  changed to 0.0.3
	* ccideinline.c:  Fixed bug in CCideFindRule causing endless loop. 
	* ccideinline.c:  Changed to prevent generating CcideFindRule...
	  functions more than once.
	* Added extra //CCIDE_INLINE_CODE: statement to threeway.c.
	* ccide.pod: updated man page source.
	* NEWS:  showed change from dtc to ccide.
	* Fixed .../expand.sed so ccide version changes ignored. 
	  Rebuilt test cases w/mkright.

2004-08-08 Tom Young <twysf@twyoung.com>
	* Makefile.am, et al:  Created dejagnu regression testing environment.
	* ccideparse.y:  added [-n], correcting usage statement.

	* ccideinline.c and cciderunx.c:  simplified CCideFindRule and
	  CCideFindRuleYes functions. 

	* created tests/ccide.test/mkright script to rebuild test cases.
	* Added assertions to tests/ccide.test/threeway.in 
	* Fixed lib/ccide.exp concatenate file sequence.
	* Removed 'Wtraditional' CFLAG 

2004-08-06 Tom Young <twysf@twyoung.com>
	* configure.in, *am, etc.: Fixed 'make rpm'
	* removed unneeded ccideconfig.h.in file (built by autoheader).
	* Added -Wtraditional to CFLAGS (MY_CFLAGS in configure.in).
	* configure.in: Added -Wtraditional to CFLAGS.
	* ccideinline.c:  Fixed up string literal continuations.
	* ccideparse.y:	  Eliminated deprecated string continuations.
	* ccidemain.c:	  Fixed conversion warning message.
	* parse.h:	  Fixed illegal #endif comment
	* ccidelex.l:	  Fixed string literal continuation.

2004-08-03 Tom Young <twysf@twyoung.com> 2004-08-03 Tom Young <twysf@twyoung.com>
	* configure.in, *am, etc.:   Temporarily removed libccide.so from build.
	  Fixed 'distcheck'.  

2004-08-01  Tom Young  <twysf@twyoung.com>

        * build, configure.in, Makfile.am:   Modernize autoconf process.
	  Change to 'bootstrap' mode.  Add AM_MAINTAINER_MODE.
	  Added 'libtoolize' to 'build'.
	  added -target-cpu.target.os to VERSION.

	* ccide.pod:  Corrected e-mail addresses.

	* tests/Makefile.in:  Fixed elev.c.  Fixed ccide invocation. 

	* Makefile.am:  CFLAGS to AM_CFLAGS.  YFLAGS to AM-YFLAGS.
