# Run TEST_PREFIX/TEST_NAME, feed THIS_DIR/TEST_NAME.in as input and check
# output is same as THIS_DIR/TEST_NAME.right
# puts "I am lib/ccide.exp"

proc ccide_run { test_name } {
    global srcdir
    global objdir
    global CCIDE
    global this_dir
    global test_prefix
    global test_parms

    if { ! [file exists "$srcdir/$this_dir/$test_name.in"] } {
       perror "$srcdir/$this_dir/$test_name.in doesn't exist" 0
        fail "$test_prefix/$test_name"
        return
    }

    if { ! [file exists "$srcdir/$this_dir/$test_name.right"] } {
        perror "$srcdir/$this_dir/$test_name.right doesn't exist"
    }

    if { [catch "exec $CCIDE -b $test_parms 2>$srcdir/$this_dir/$test_name.err < $srcdir/$this_dir/$test_name.in  | sed -f $srcdir/$this_dir/expand.sed > $srcdir/$this_dir/$test_name.c"] } {
          fail "$test_prefix/$test_name"
	  return
    }

    if { [catch "exec echo // Generated by ccide.exp:   STDERR >> $srcdir/$this_dir/$test_name.c"] } {
          perror "fail cat"
    }

    if { [catch "exec cat $srcdir/$this_dir/$test_name.err >> $srcdir/$this_dir/$test_name.c"] } {
          perror "fail cat"
    }

    set result [diff "$srcdir/$this_dir/$test_name.right" "$srcdir/$this_dir/$test_name.c" ]    

	# puts "diff result = $result"
	if [ expr $result != 1 ] {
                fail "$test_prefix/$test_name"
        	# perror "diff failed"
        } 

#	if { [catch "exec make $srcdir/$this_dir/$test_name"] } {
#	         perror "fail make"
#	         fail "$test_prefix/$test_name"
#	}

#        if { [catch "exec $srcdir/$this_dir/$test_name"] } {
#                 perror "fail exec"
#	         fail "$test_prefix/$test_name"
#        } else {
		# puts "$test_prefix Passed"
#		pass "$test_prefix/$test_name"


#		file delete -- "$srcdir/$this_dir/$test_name.c"
#		file delete -- "$srcdir/$this_dir/$test_name"
#		file delete -- "$srcdir/$this_dir/$test_name.err"
#	}

}

